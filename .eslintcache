[{"C:\\Users\\Mitch\\Desktop\\web-module-project-reducer\\src\\index.js":"1","C:\\Users\\Mitch\\Desktop\\web-module-project-reducer\\src\\App.js":"2","C:\\Users\\Mitch\\Desktop\\web-module-project-reducer\\src\\reportWebVitals.js":"3","C:\\Users\\Mitch\\Desktop\\web-module-project-reducer\\src\\components\\CalcButton.js":"4","C:\\Users\\Mitch\\Desktop\\web-module-project-reducer\\src\\components\\TotalDisplay.js":"5","C:\\Users\\Mitch\\Desktop\\web-module-project-reducer\\src\\reducers\\index.js":"6","C:\\Users\\Mitch\\Desktop\\web-module-project-reducer\\src\\actions\\index.js":"7"},{"size":517,"mtime":1618271075228,"results":"8","hashOfConfig":"9"},{"size":3139,"mtime":1618277617544,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1618271075228,"results":"11","hashOfConfig":"9"},{"size":296,"mtime":1618271075228,"results":"12","hashOfConfig":"9"},{"size":440,"mtime":1618271075228,"results":"13","hashOfConfig":"9"},{"size":1619,"mtime":1618277734937,"results":"14","hashOfConfig":"9"},{"size":827,"mtime":1618277649019,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1qmw45m",{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mitch\\Desktop\\web-module-project-reducer\\src\\index.js",[],["33","34"],"C:\\Users\\Mitch\\Desktop\\web-module-project-reducer\\src\\App.js",["35","36","37","38","39"],"import React, { useReducer, useState } from 'react';\r\nimport reducer, { initialState } from './reducers';\r\nimport { addOne, applyNumber , changeOperator , clearDisplay, mClear, mPlus, mReplace } from './actions'\r\n\r\n\r\nimport './App.css';\r\n\r\nimport TotalDisplay from './components/TotalDisplay';\r\nimport CalcButton from './components/CalcButton';\r\n\r\nfunction App() {\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const applyNum = (num) => {\r\n\t\tdispatch(applyNumber(num));\r\n\t};\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className=\"navbar navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"#\"><img width=\"40px\" src=\"./Lambda-Logo-Red.png\"/> Lambda Reducer Challenge</a>\r\n      </nav>\r\n\r\n      <div className = \"container row mt-5\">\r\n        <div className=\"col-md-12 d-flex justify-content-center\">\r\n          <form name=\"Cal\">\r\n            \r\n            <TotalDisplay value={state.total}/>\r\n            <div className=\"row details\">\r\n              <span id=\"operation\"><b>Operation:</b>{state.operation}</span>\r\n              <span id=\"memory\"><b>Memory:</b>{state.memory}</span>\r\n            </div>\r\n            \r\n            <div className=\"row\">\r\n              <CalcButton value={\"M+\"} onClick = {() => dispatch(mPlus(\"M+\"))} />\r\n              <CalcButton value={\"MR\"} onClick = {() => dispatch(mReplace(\"MR\"))} />\r\n              <CalcButton value={\"MC\"} onClick = {() => dispatch(mClear(\"MC\"))} />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              {/* <CalcButton value={1} onClick={() =>{dispatch(addOne(1))}}/> */}\r\n              <CalcButton value={1} onClick= {() => dispatch(applyNumber(1))}/>\r\n              <CalcButton value={2}onClick= {() => dispatch(applyNumber(2))}/>\r\n              <CalcButton value={3}onClick= {() => dispatch(applyNumber(3))}/>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <CalcButton value={4} onClick= {() => dispatch(applyNumber(4))}/>\r\n              <CalcButton value={5} onClick= {() => dispatch(applyNumber(5))}/>\r\n              <CalcButton value={6} onClick= {() => dispatch(applyNumber(6))}/>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <CalcButton value={7} onClick= {() => dispatch(applyNumber(7))}/>\r\n              <CalcButton value={8} onClick= {() => dispatch(applyNumber(8))}/>\r\n              <CalcButton value={9} onClick= {() => dispatch(applyNumber(9))}/>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <CalcButton value={\"+\"}  onClick = {() => dispatch(changeOperator('+'))}\r\n              />\r\n              <CalcButton value={\"*\"}  onClick = {() => dispatch(changeOperator('*'))}\r\n              />\r\n              <CalcButton value={\"-\"}  onClick = {() => dispatch(changeOperator('-'))}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"row ce_button\">\r\n              <CalcButton value={\"CE\"}\r\n                            onClick = {() => {dispatch(clearDisplay('CE'))}}\r\n                            />\r\n            </div>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Mitch\\Desktop\\web-module-project-reducer\\src\\reportWebVitals.js",[],"C:\\Users\\Mitch\\Desktop\\web-module-project-reducer\\src\\components\\CalcButton.js",[],"C:\\Users\\Mitch\\Desktop\\web-module-project-reducer\\src\\components\\TotalDisplay.js",[],"C:\\Users\\Mitch\\Desktop\\web-module-project-reducer\\src\\reducers\\index.js",["40"],"import { ADD_ONE, APPLY_NUMBER, CHANGE_OPERATION, CLEAR_DISPLAY , M_CLEAR, M_PLUS, M_REPLACE } from './../actions';\r\n\r\nexport const initialState = {\r\n    total: 0,\r\n    operation: \"*\",\r\n    memory: 0\r\n}\r\n\r\nconst calculateResult = (num1, num2, operation) => {\r\n    switch(operation) {\r\n        case(\"+\"):\r\n            return num1 + num2;\r\n        case(\"*\"):\r\n            return num1 * num2;\r\n        case(\"-\"):\r\n            return num1 - num2;\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case(ADD_ONE):\r\n            return({\r\n                ...state,\r\n                total: state.total + 1\r\n            });\r\n\r\n        case(APPLY_NUMBER):\r\n            return ({ \r\n                ...state, \r\n                total: calculateResult(state.total, action.payload, state.operation)\r\n            });\r\n        \r\n        case(CHANGE_OPERATION):\r\n            return ({\r\n                ...state,\r\n                operation: action.payload\r\n            });\r\n            \r\n\r\n            case(CLEAR_DISPLAY): \r\n            return ({\r\n                ...state,\r\n                total: 0\r\n            })\r\n    \r\n            case(M_PLUS):\r\n            return ({\r\n                ...state,\r\n                memory: state.total,\r\n            })\r\n    \r\n            case(M_REPLACE): \r\n            return ({\r\n                ...state,\r\n                total: state.memory\r\n            })\r\n    \r\n            case(M_CLEAR):\r\n            return ({\r\n                ...state,\r\n                memory: 0\r\n            })\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","C:\\Users\\Mitch\\Desktop\\web-module-project-reducer\\src\\actions\\index.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":29,"nodeType":"47","messageId":"48","endLine":1,"endColumn":37},{"ruleId":"45","severity":1,"message":"49","line":3,"column":10,"nodeType":"47","messageId":"48","endLine":3,"endColumn":16},{"ruleId":"45","severity":1,"message":"50","line":15,"column":9,"nodeType":"47","messageId":"48","endLine":15,"endColumn":17},{"ruleId":"51","severity":1,"message":"52","line":22,"column":9,"nodeType":"53","endLine":22,"endColumn":46},{"ruleId":"54","severity":1,"message":"55","line":22,"column":46,"nodeType":"53","endLine":22,"endColumn":93},{"ruleId":"56","severity":1,"message":"57","line":10,"column":5,"nodeType":"58","messageId":"59","endLine":17,"endColumn":6},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'addOne' is defined but never used.","'applyNum' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]